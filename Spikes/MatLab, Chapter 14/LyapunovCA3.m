%Plots Contours of Lyapunov function for divisive feedback networkclear all;whitebg('w');XX = -10:100;YY = -10:100;[R1, R2] = meshgrid(XX, YY);F = -R1 + (R2 > 0).*(100*(0.25*R2).^2)./(100 + (0.25*R2).^2);G = -R2 + (R1 > 0).*(100*(0.25*R1).^2)./(100 + (0.25*R1).^2);U = (1/2)*(F.^2 + G.^2);DX = zeros(1, 200);DY = zeros(1, 200);DX(1) = 25;DY(1) = 62;figure(1), contour(R1, R2, U, [0.05, 3, 15, 35, 70, 119, 300, 750]); axis square;axis([-10 100 -10 100]);xlabel('R1'); ylabel('R2');axis([-10, 100, -10, 100]);clear XX YY R1 R2  F G U;XX = -10:2.5:100;YY = -10:2.5:100;[R1, R2] = meshgrid(XX, YY);F = -R1 + (R2 > 0).*(100*(0.25*R2).^2)./(100 + (0.25*R2).^2);G = -R2 + (R1 > 0).*(100*(0.25*R1).^2)./(100 + (0.25*R1).^2);U = ((1/2)*(F.^2 + G.^2)).^0.3;figure(2), meshc(R1, R2, U); view(75, 15); xlabel('R1'); ylabel('R2'); zlabel('U(R1, R2)^0.3');axis([-10, 100, -10, 100, 0, 16]);pause(1);for K = 15:15:75; view(70, K); pause(1);  end;for K = 0:30:360; view(70 + K, 15); pause(1); end;